<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="info.getbus.servebus.persistence.datamappers.route.WayPointMapper">

  <resultMap id="wayPoint" type="WayPoint">
       <id column="id" property="id" />
       <result column="name" property="name" />
       <result column="country_code" property="countryCode" />
       <result column="address" property="address" />
       <result column="departure" property="departure" />
       <result column="arrival" property="arrival" />
       <result column="trip_time" property="tripTime" />
       <result column="distance" property="distance" />
  </resultMap>

  <select id="selectRoutePointsWithData" resultMap="wayPoint">
    SELECT
      wp.id           as id,
      wp.sequence     as sequence,
      wp.name         as name,
      wp.country_code as country_code,
      wp.address      as address,
      wpd.departure   as departure,
      wpd.arrival     as arrival,
      wpd.trip_time   as trip_time,
      wpd.distance    as distance
    FROM way_point wp
    LEFT JOIN way_point_data wpd ON wpd.way_point_id = wp.id AND wpd.direction = #{direction}
    WHERE wp.route_id = #{routeId}
    ORDER BY sequence
    <choose>
      <when test='direction.name == "F"'>
          ASC
      </when>
      <otherwise>
        DESC
      </otherwise>
    </choose>
  </select>

  <insert id="insert" useGeneratedKeys="true" keyProperty="point.id" keyColumn="id">
    INSERT INTO way_point (
      route_id,
      name,
      country_code,
      address,
      sequence
    ) VALUES (
      #{routeId},
      #{point.name},
      #{point.countryCode},
      #{point.address},
      #{sequence}
    )
  </insert>

  <update id="update">
    UPDATE way_point SET
    name = #{point.name},
    country_code = #{point.countryCode},
    address = #{point.address}
    WHERE id = #{point.id}
  </update>

  <insert id="insertData" useGeneratedKeys="false">
    INSERT INTO way_point_data (
      way_point_id,
      direction,
      departure,
      arrival,
      trip_time,
      distance
    ) VALUES (
      #{point.id},
      #{direction},
      #{point.departure},
      #{point.arrival},
      #{point.tripTime},
      #{point.distance}
    )
  </insert>

  <insert id="insertDataIfNonExist" useGeneratedKeys="false">
    INSERT INTO way_point_data (
      way_point_id,
      direction,
      departure,
      arrival,
      trip_time,
      distance
    ) SELECT
        #{point.id},
        #{direction},
        #{point.departure},
        #{point.arrival},
        #{point.tripTime},
        #{point.distance}
    WHERE NOT EXISTS (
      SELECT wpd.way_point_id FROM way_point_data wpd WHERE wpd.way_point_id = #{point.id} AND wpd.direction = #{direction}
    )
  </insert>

  <update id="updateData">
    UPDATE way_point_data SET
    departure = #{point.departure},
    arrival = #{point.arrival},
    trip_time = #{point.tripTime},
    distance = #{point.distance}
    WHERE way_point_id = #{point.id} AND direction = #{direction}
  </update>

  <update id="updateSequence">
    UPDATE way_point SET
      sequence = #{sequence}
    WHERE id = #{id}
  </update>

  <select id="existInconsistentRoutePoints" resultType="boolean">
    SELECT exists (
      SELECT wp.id, wpdf.way_point_id, wpdr.way_point_id, wpdf.direction, wpdr.direction
      FROM way_point wp
      LEFT JOIN way_point_data wpdf
        ON wp.id = wpdf.way_point_id and wpdf.direction = 'F'
      LEFT JOIN way_point_data wpdr
        ON wp.id = wpdr.way_point_id and wpdr.direction = 'R'
      --        and wpd.way_point_id is NULL
      WHERE wp.route_id = #{routeId} AND (wpdf.way_point_id is NULL or wpdr.way_point_id is NULL)
    )
  </select>

  <delete id="deleteNotIn">
    DELETE FROM way_point wp
    WHERE wp.route_id = #{routeId} AND wp.id NOT IN
    <foreach item="id" collection="ids" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

</mapper>